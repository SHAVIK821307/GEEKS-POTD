//{ Driver Code Starts
// driver

import java.util.*;


// } Driver Code Ends




/* node for linked list

class Node {
    int data;
    Node next;

    Node(int d) {
        data = d;
        next = null;
    }
}

*/

class Solution{
    //Function to add two numbers represented by linked list.
    static Node reverse(Node head){
        Node cur = head;
        Node prev = null;
        
        while(cur != null){
            Node next = cur.next;
            cur.next = prev;
            prev = cur;
            cur = next;
        }
        return prev;
    }
    static Node addTwoLists(Node num1, Node num2){
        // code here
        // return head of sum list
        Node temp1=reverse(num1);
        Node temp2=reverse(num2);
        int c=0;
        int sum=temp1.data+temp2.data+c;
        Node newNode=new Node(sum%10);
        c=sum/10;
        Node temp=newNode;
        temp1=temp1.next;
        temp2=temp2.next;
        while(temp1!=null && temp2!=null){
            sum=temp1.data+temp2.data+c;
            Node t=new Node(sum%10);
            c=sum/10;
            temp.next=t;
            temp=temp.next;
            temp1=temp1.next;
            temp2=temp2.next;
        }
        while(temp1!=null){
            sum=temp1.data+c;
            c=sum/10;
            Node t=new Node(sum%10);
            
            temp.next=t;
            temp=temp.next;
            temp1=temp1.next;
        }
        while(temp2!=null){
            sum=temp2.data+c;
            c=sum/10;
            Node t=new Node(sum%10);
            
            temp.next=t;
            temp=temp.next;
            temp2=temp2.next;
        }
        // System.out.println(c);
        if(c!=0){
            temp.next=new Node(c);
            c=0;
        }
        Node cur =reverse(newNode);
        while(cur!=null){
            if(cur.data!=0){
                newNode=cur;
                break;
            }
            // else{
            //     break;
            // }
            cur=cur.next;
        }
        return newNode;
    }
}

//{ Driver Code Starts.

class Node {
    int data;
    Node next;

    Node(int d) {
        data = d;
        next = null;
    }
}

class GfG {

    static void printList(Node n) {
        while (n != null) {
            System.out.print(n.data + " ");
            n = n.next;
        }
        System.out.println();
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();

        while (T-- > 0) {

            int n = sc.nextInt();
            int val = sc.nextInt();

            Node num1 = new Node(val);
            Node tail = num1;
            for (int i = 0; i < n - 1; i++) {
                val = sc.nextInt();
                tail.next = new Node(val);
                tail = tail.next;
            }

            int m = sc.nextInt();
            val = sc.nextInt();

            Node num2 = new Node(val);
            tail = num2;
            for (int i = 0; i < m - 1; i++) {
                val = sc.nextInt();
                tail.next = new Node(val);
                tail = tail.next;
            }

            Solution g = new Solution();
            Node res = g.addTwoLists(num1, num2);
            printList(res);
        }
    }
}

// } Driver Code Ends
