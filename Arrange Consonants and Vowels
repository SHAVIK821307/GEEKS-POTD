//{ Driver Code Starts
/*package whatever //do not write package name here */

import java.io.*;
import java.util.*;


// } Driver Code Ends


/*
Structure of node class is:
class Node {
    char data;
    Node next;
    
    public Node(char data){
        this.data = data;
        next = null;
    }
}
*/
class Solution {
    
    public Node arrangeCV(Node head){
        //write code here and return the head of changed linked list
        Node prevwl=null;
        
        Node cnsnt=head;
        while(cnsnt!=null){
            if(cnsnt.data!='a' && cnsnt.data!='e'&& cnsnt.data!='i' && cnsnt.data!='o' && cnsnt.data!='u' ){
                break;
            }
            prevwl=cnsnt;
            cnsnt=cnsnt.next;
            
        }
        
        Node temp=cnsnt;
        Node prevcnt=cnsnt;
        // System.out.println(prevcnt.data);
        while(temp!=null){
            if(temp.data=='a' || temp.data=='e' || temp.data== 'i'  || temp.data=='o' || temp.data=='u'){
                Node vwl=new Node(temp.data);
                prevcnt.next=temp.next;
                temp=prevcnt;
                // System.out.println(prev.data);
                // System.out.println(prevcnt.data);
                if(prevwl!=null){
                    
                    vwl.next=prevwl.next;
                    prevwl.next=vwl;
                    prevwl=vwl;
                }
                else{
                    vwl.next=head;
                    prevwl=vwl;
                    head=prevwl;
                }
                
                
            }
            prevcnt=temp;
            temp=temp.next;
        }
        return head;
    }
}

//{ Driver Code Starts.

class Node {
    char data;
    Node next;

    public Node(char data) {
        this.data = data;
        next = null;
    }
}

class GFG {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {
            int n = sc.nextInt();
            Node head = null, tail = null;

            char head_c = sc.next().charAt(0);
            head = new Node(head_c);
            tail = head;

            while (n-- > 1) {
                tail.next = new Node(sc.next().charAt(0));
                tail = tail.next;
            }

            Solution obj = new Solution();
            // show(head);
            show(obj.arrangeCV(head));
        }
    }

    public static void po(Object o) { System.out.println(o); }

    public static void show(Node head) {
        while (head != null) {
            System.out.print(head.data + " ");
            head = head.next;
        }
        System.out.println();
    }
}

// } Driver Code Ends
